import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.linear_model import LogisticRegression
from sklearn.svm import LinearSVC
from sklearn.metrics import classification_report, accuracy_score

df = pd.read_csv('spam.csv', encoding='latin-1')
df = df[['v1', 'v2']]
df.columns = ['label', 'message']

X_train, X_test, y_train, y_test = train_test_split(df['message'], df['label'], test_size=0.2, random_state=42)
vectorizer = TfidfVectorizer(stop_words='english')
X_train_tfidf = vectorizer.fit_transform(X_train)
X_test_tfidf = vectorizer.transform(X_test)

nb = MultinomialNB()
lr = LogisticRegression(max_iter=1000)
svm = LinearSVC()

nb.fit(X_train_tfidf, y_train)
lr.fit(X_train_tfidf, y_train)
svm.fit(X_train_tfidf, y_train)

nb_pred = nb.predict(X_test_tfidf)
lr_pred = lr.predict(X_test_tfidf)
svm_pred = svm.predict(X_test_tfidf)

print('Naive Bayes:', accuracy_score(y_test, nb_pred))
print('Logistic Regression:', accuracy_score(y_test, lr_pred))
print('SVM:', accuracy_score(y_test, svm_pred))
print(classification_report(y_test, svm_pred))
